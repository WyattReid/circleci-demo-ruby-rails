version: 2.1

orbs:
  ruby: circleci/ruby@1.1.0
  node: circleci/node@2
  aws-ecr: circleci/aws-ecr@7.2.0
  aws-ecs: circleci/aws-ecs@2.2.1

jobs:

  build:
    docker:
      - image: cimg/ruby:2.7-node
    steps:
      - checkout
      - ruby/install-deps
      # Store bundle cache
      - node/install-packages:
          pkg-manager: yarn
          cache-key: "yarn.lock"
  test:
    parallelism: 3
    docker:
      - image: cimg/ruby:2.7-node
      - image: circleci/postgres:9.5-alpine
        environment:
          POSTGRES_USER: circleci-demo-ruby
          POSTGRES_DB: rails_blog_test
          POSTGRES_PASSWORD: ""
    environment:
      BUNDLE_JOBS: "3"
      BUNDLE_RETRY: "3"
      PGHOST: 127.0.0.1
      PGUSER: circleci-demo-ruby
      PGPASSWORD: ""
      RAILS_ENV: test
    steps:
      - checkout
      - ruby/install-deps
      - node/install-packages:
          pkg-manager: yarn
          cache-key: "yarn.lock"
      - run:
          name: Wait for DB
          command: dockerize -wait tcp://localhost:5432 -timeout 1m
      - run:
          name: Database setup
          command: bundle exec rails db:schema:load --trace
      # Run rspec in parallel
      - ruby/rspec-test
      - ruby/rubocop-check
  push_rails_to_ecr:
    name: Push Rails to ECR
    docker:
      - image: cimg/ruby:2.7-node
    steps:
      - checkout
      - ruby/install-deps
      # Store bundle cache
      - node/install-packages:
          pkg-manager: yarn
          cache-key: "yarn.lock"
      - setup_remote_docker
      - aws-ecr/build-and-push-image: 
          dockerfile: rails.Dockerfile
          path: .
          repo: 'wyatt-cc-rails-repo'
          tag: 'rails,latest,ra-${CIRCLE_SHA1}'
  push_nginx_to_ecr:
    name: Push NGINX to ECR
    docker:
      - image: cimg/ruby:2.7-node
    steps:
      - checkout
      - ruby/install-deps
      # Store bundle cache
      - node/install-packages:
          pkg-manager: yarn
          cache-key: "yarn.lock"
      - setup_remote_docker
      - aws-ecr/build-and-push-image: 
          dockerfile: nginx.Dockerfile
          path: .
          repo: 'wyatt-cc-nginx-repo'
          tag: 'nginx,latest,ng-${CIRCLE_SHA1}'
      
workflows:
  version: 2
  build_test_and_deploy:
    jobs:
      - build
      - test:
          requires:
            - build
      - push_rails_to_ecr:
          requires:
            - test
      - push_nginx_to_ecr:
          requires:
            - test
      - aws-ecs/deploy-service-update:
          name: Deploy Rails
          cluster-name: wyattcc-ecs-cluster
          container-image-name-updates: 'container=wyatt-cc-rails,tag=latest'
          family: wyattcc_task
          service-name: wyattcc-rails-service
          requires:
            - push_rails_to_ecr
      - aws-ecs/deploy-service-update:
          name: Deploy NGINX
          cluster-name: wyattcc-ecs-cluster
          container-image-name-updates: 'container=wyatt-cc-nginx,tag=latest'
          family: wyattcc_task
          service-name: wyattcc-nginx-service
          requires:
            - Deploy Rails
